service: calculator-tn-api
frameworkVersion: '3'

plugins:
 - serverless-offline
 - serverless-plugin-canary-deployments

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 128
  timeout: 10
  logs:
    restApi: true
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - codedeploy:*
      Resource:
        - "*"
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    JWT_HS256_KEY: ${param:jwtKey}
    RANDOM_ORG_API_KEY: ${param:randomOrgApiKey}
    DB_CONN: ${param:dbConn}
    CORS_WEB_ORIGIN: ${param:corsWebOrigin}

custom:
  deploymentSettings:
        type: AllAtOnce
        alias: live

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'https://calculator-tn-webapp.vercel.app'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  authorizeRequest:
    handler: app.authorizeRequest
  auth:
    handler: app.auth
    events:
      - http:
          path: /v1/auth
          method: POST
          cors: true
  register:
    handler: app.register
    events:
      - http:
          path: /v1/register
          method: POST
          cors: true
  calculateBasic:
    handler: app.calculateBasic
    events:
      - http:
          path: /v1/calculate/basic
          method: POST
          cors: true
          authorizer:
            name: authorizeRequest
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 3600
  calculateRandom:
    handler: app.calculateRandom
    events:
      - http:
          path: /v1/calculate/random
          method: POST
          cors: true
          authorizer:
            name: authorizeRequest
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 3600
  listRecordsByUserId:
    handler: app.listRecordsByUserId
    events:
      - http:
          path: /v1/records
          method: GET
          cors: true
          authorizer:
            name: authorizeRequest
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 3600
  deleteRecord:
    handler: app.deleteRecord
    events:
      - http:
          path: /v1/records
          method: DELETE
          cors: true
          authorizer:
            name: authorizeRequest
            identitySource: method.request.header.Authorization
            resultTtlInSeconds: 3600
